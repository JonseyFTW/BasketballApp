services:
  # PostgreSQL Database Service
  postgres:
    image: postgres:15-alpine
    container_name: basketball-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: basketball_coach_app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Service
  redis:
    image: redis:7-alpine
    container_name: basketball-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - app-network

  # Basketball App Service (Development Mode)
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: basketball-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@basketball-db:5432/basketball_coach_app?schema=public
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=basketball-coach-app-development-secret-key-32-chars-minimum
      - REDIS_URL=redis://basketball-redis:6379
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next

volumes:
  postgres_data:
    driver: local

networks:
  app-network:
    driver: bridge